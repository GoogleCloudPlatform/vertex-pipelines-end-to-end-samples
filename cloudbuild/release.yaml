# Copyright 2022 Google LLC

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     https://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
steps:

  - id: build-container-images
    name: gcr.io/cloud-builders/docker
    dir: /workspace/model
    entrypoint: sh
    args:
      - -c
      - |
        docker build --target=training -t training:latest . && \
        docker build --target=serving -t serving:latest . && \
        for proj in ${_DESTINATION_PROJECTS} ; do \
          docker tag training:latest ${_VERTEX_LOCATION}-docker.pkg.dev/$$proj/vertex-images/training:${TAG_NAME} && \
          docker tag serving:latest ${_VERTEX_LOCATION}-docker.pkg.dev/$$proj/vertex-images/serving:${TAG_NAME} && \
          docker push ${_VERTEX_LOCATION}-docker.pkg.dev/$$proj/vertex-images/training:${TAG_NAME} && \
          docker push ${_VERTEX_LOCATION}-docker.pkg.dev/$$proj/vertex-images/serving:${TAG_NAME}; \
        done

  # Install poetry, install deps, compile pipelines
  - id: compile-and-publish-pipelines
    name: python:3.9
    entrypoint: /bin/sh
    args:
      - -c
      - |
        make setup && \
        for proj in ${_DESTINATION_PROJECTS} ; do \
          CONTAINER_IMAGE_REGISTRY=${_VERTEX_LOCATION}-docker.pkg.dev/$$proj/vertex-images \
          make compile-pipeline pipeline=training && \
          make compile-pipeline pipeline=prediction && \
          cd pipelines && \
          poetry run python -m pipelines.utils.upload_pipeline \
          --dest=https://${_VERTEX_LOCATION}-kfp.pkg.dev/$$proj/vertex-pipelines \
          --yaml=src/pipelines/training/pipeline.yaml \
          --tag=latest \
          --tag=${TAG_NAME} && \
          poetry run python -m pipelines.utils.upload_pipeline \
          --dest=https://${_VERTEX_LOCATION}-kfp.pkg.dev/$$proj/vertex-pipelines \
          --yaml=src/pipelines/prediction/pipeline.yaml \
          --tag=latest \
          --tag=${TAG_NAME}; \
        done
    env:
      - RESOURCE_SUFFIX=default

options:
  logging: CLOUD_LOGGING_ONLY

timeout: 1800s  # 30mins
